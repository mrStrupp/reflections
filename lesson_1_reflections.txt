1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
    You look more at the differences than the whole text.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
    You see what you have done before, or you can return to previous versions if something does not work good.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in
   Git, vs having versions automatically saved, like Google Docs does?
    Pros: control over what changes are saved as a commit, that logical belong together
    Cons: you may forget to commit the changes that belong together.

4.Why do you think some version control systems, like Git, allow saving multiple files in one commit,
  while others, like Google Docs, treat ech file separately?
    Git is more like a Version control for whole projects. When you commit a change something in this project, the whole
    projects is comitted.
    Google Docs is more fore documents that usually don't belong to each other, so it makes no sense to commit
    all together.

5. How can you use the commands git log and git diff to view the history of files?
    You type it as a command. First git log to get the IDs of the commits you want to view and then you type git diff with the
    two IDs to compare them.

6. How might using version control make you more confident to make changes that could break something?
    When you break something with your recent changes, you can easily return to a previous version and you can compare your buggy
    code with an older version where everything works fine.

7. Now that you have your workspace set up, what do you want to try using Git for?
    I want to use Git for doing a tutorial for javascript, where they use Github.

